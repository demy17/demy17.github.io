
In C#, an Abstract class is designed to be incapable of independent instantiation; it can solely function as a superclass. It has the capacity to incorporate abstract methods as well as regular methods.

This is the code Example 
using System;


abstract class Shape
{
    public abstract double CalculateArea();
}

class Rectangle : Shape
{
    public double Length { get; set; }
    public double Width { get; set; }


    public Rectangle(double length, double width)
    {
        Length = length;
        Width = width;
    }

    public override double CalculateArea()
    {
        return Length * Width;
    }
}

class Program
{
    static void Main()
    {
        Rectangle myRectangle = new Rectangle(5, 10);

        Console.WriteLine("Area of the rectangle: " + myRectangle.CalculateArea());
        Console.ReadLine();
    }
}

